<callisto:CustomDialog
    x:Class="Surge.Windows8.Views.Controls.TorrentWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Surge.Windows8.Views.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:callisto="using:Callisto.Controls"
    xmlns:common="using:Surge.Shared.Common"
    mc:Ignorable="d"
    IsOpen="{Binding IsOpen}"
    Background="Transparent"
    d:DesignHeight="600"
    d:DesignWidth="482">

    <callisto:CustomDialog.Resources>
        <Style x:Key="PopupButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{ThemeResource ButtonBackgroundThemeBrush}"/>
            <Setter Property="Foreground" Value="{ThemeResource ButtonForegroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="Margin" Value="3" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#464646"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#373737"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#666666"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="PointerFocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" BorderBrush="Transparent" BorderThickness="0" Background="#2B2B2B" Margin="0">
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PopupAppBarButtonStyle" TargetType="AppBarButton">
            <Setter Property="Foreground" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="AppBarButton">
                        <Grid x:Name="RootGrid" Background="Transparent" Width="20">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ApplicationViewStates">
                                    <VisualState x:Name="FullSize"/>
                                    <VisualState x:Name="Compact">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="20"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPointerOverForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#AC0000"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="PointerFocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <StackPanel Margin="0" VerticalAlignment="Center">
                                <ContentPresenter x:Name="Content" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PopupListItemStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Margin" Value="0,0,18,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter CheckHintBrush="{ThemeResource ListViewItemCheckHintThemeBrush}"
                                               CheckBrush="{ThemeResource ListViewItemCheckThemeBrush}"
                                               ContentMargin="4"
                                               ContentTransitions="{TemplateBinding ContentTransitions}"
                                               CheckSelectingBrush="{ThemeResource ListViewItemCheckSelectingThemeBrush}"
                                               DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                               DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                               DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                               DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                               FocusBorderBrush="{ThemeResource ListViewItemFocusBorderThemeBrush}"
                                               HorizontalContentAlignment="Left"
                                               Padding="{TemplateBinding Padding}"
                                               PointerOverBackgroundMargin="1"
                                               PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                                               PointerOverBackground="#3383ce"
                                               ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                               SelectedPointerOverBorderBrush="{ThemeResource ListViewItemSelectedPointerOverBorderThemeBrush}"
                                               SelectionCheckMarkVisualEnabled="True"
                                               SelectedForeground="{ThemeResource ListViewItemSelectedForegroundThemeBrush}"
                                               SelectedPointerOverBackground="{ThemeResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"
                                               SelectedBorderThickness="{ThemeResource ListViewItemCompactSelectedBorderThemeThickness}"
                                               SelectedBackground="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="PopupListItemTemplate">
            <Grid Width="413" Height="60" Margin="5" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Ellipse Width="60" Height="60">
                    <Ellipse.Fill>
                        <ImageBrush Stretch="None" ImageSource="ms-appx:///Assets/TorrentIcon.png" />
                    </Ellipse.Fill>
                </Ellipse>
                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                    <TextBlock Padding="15, 0, 0, 0"
                               Width="280"
                               HorizontalAlignment="Left"
                               TextAlignment="Left"
                               Text="{Binding DisplayName}"
                               TextWrapping="NoWrap"
                               TextTrimming="CharacterEllipsis"
                               Foreground="White"
                               Height="22" />
                    <TextBlock Padding="15, 0, 0, 0"
                               Width="312"
                               FontSize="12"
                               Foreground="LightGray"
                               HorizontalAlignment="Left"
                               TextAlignment="Left"
                               TextTrimming="CharacterEllipsis"
                               Text="{Binding DisplayPath}"
                               TextWrapping="NoWrap"
                               Height="22" />
                </StackPanel>
                <AppBarButton Width="40"
                              Height="40"
                              Grid.Column="2"
                              Icon="Cancel"
                              BorderBrush="Transparent"
                              Foreground="White"
                              IsCompact="True"
                              Command="{Binding RemoveCommand}"
                              Style="{StaticResource PopupAppBarButtonStyle}" />
            </Grid>
        </DataTemplate>
        <Storyboard x:Key="HideStoryboard">
            <DoubleAnimation Storyboard.TargetName="AddByURLPanel" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0.0"/>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AddByURLPanel" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Collapsed"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ShowStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AddByURLPanel" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="AddByURLPanel" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1.0"/>
        </Storyboard>
        <Style x:Key="PopupCheckboxStyle" TargetType="CheckBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource CheckBoxContentForegroundThemeBrush}"/>
            <Setter Property="Padding" Value="2,3,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#1A1A1A"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#1A1A1A"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#101010"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#101010"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard />
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="PointerFocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="27"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid VerticalAlignment="Top">
                                    <Rectangle x:Name="NormalRectangle" Fill="#2B2B2B" Height="21" Stroke="{ThemeResource CheckBoxBorderThemeBrush}" StrokeThickness="{ThemeResource CheckBoxBorderThemeThickness}" UseLayoutRounding="False" Width="21"/>
                                    <Path x:Name="CheckGlyph" Data="F1 M 0,58 L 2,56 L 6,60 L 13,51 L 15,53 L 6,64 z" Fill="White" FlowDirection="LeftToRight" Height="14" Opacity="0" Stretch="Fill" Width="16"/>
                                    <Rectangle x:Name="FocusVisualWhite" Height="27" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1" Width="27"/>
                                    <Rectangle x:Name="FocusVisualBlack" Height="27" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1" Width="27"/>
                                </Grid>
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PopupFavouritesListItemStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter CheckHintBrush="Transparent"
                                               CheckBrush="Transparent"
                                               ContentMargin="0"
                                               ContentTransitions="{TemplateBinding ContentTransitions}"
                                               CheckSelectingBrush="Transparent"
                                               DragForeground="Transparent"
                                               DragOpacity="0"
                                               DragBackground="Transparent"
                                               DisabledOpacity="0"
                                               FocusBorderBrush="Transparent"
                                               HorizontalContentAlignment="Left"
                                               Padding="0"
                                               PointerOverBackgroundMargin="0"
                                               PlaceholderBackground="Transparent"
                                               PointerOverBackground="#3B3B3B"
                                               ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                               SelectedPointerOverBorderBrush="Transparent"
                                               SelectionCheckMarkVisualEnabled="True"
                                               SelectedForeground="White"
                                               SelectedPointerOverBackground="#3B3B3B"
                                               SelectedBorderThickness="0"
                                               SelectedBackground="Transparent"
                                               VerticalContentAlignment="Center">
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="PopupFavouritesListItemTemplate">
            <TextBlock Padding="12,0" Text="{Binding}" />
        </DataTemplate>
        <Style x:Key="AddByURLStyle" TargetType="TextBox">
            <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}"/>
            <Setter Property="Foreground" Value="{ThemeResource TextBoxForegroundThemeBrush}"/>
            <Setter Property="Background" Value="{ThemeResource TextBoxBackgroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource TextBoxBorderThemeBrush}"/>
            <Setter Property="SelectionHighlightColor" Value="{StaticResource HighlightBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled" />
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver" />
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}" Grid.Row="1" Grid.RowSpan="1"/>
                            <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="1"/>
                            <ContentPresenter x:Name="HeaderContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{ThemeResource TextBoxForegroundHeaderThemeBrush}" FontWeight="Semilight" Margin="0,4,0,4" Grid.Row="0"/>
                            <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
                            <ContentControl x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2" Content="{TemplateBinding PlaceholderText}" Foreground="{ThemeResource TextBoxPlaceholderTextThemeBrush}" IsHitTestVisible="False" IsTabStop="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </callisto:CustomDialog.Resources>

    <!-- MaxHeight 546, MinHeight 497 -->
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Width="482" >
        <StackPanel Background="#3D3D3D">
            <StackPanel Margin="15" Orientation="Vertical">
                <StackPanel Margin="-2, 0, -2, 0" Orientation="Horizontal">
                    <Button Content="Add by URL"
                    Width="222"
                    Height="40"
                    Visibility="{Binding IsAdd, Converter={StaticResource BooleanToVisibility}}"
                    Click="AddURLButtonClick"
                    Style="{StaticResource PopupButtonStyle}"/>
                    <Button Content="Browse for file"
                    Width="222"
                    Height="40"
                    Visibility="{Binding IsAdd, Converter={StaticResource BooleanToVisibility}}"
                    Command="{Binding BrowseCommand}"
                    Style="{StaticResource PopupButtonStyle}" />
                </StackPanel>
                <StackPanel Visibility="Collapsed"
                        Opacity="0"
                        x:Name="AddByURLPanel"
                        Orientation="Horizontal"
                        Background="#2B2B2B"
                        Margin="1, 3">
                    <TextBox x:Name="AddURLText"
                            Width="394"
                            Text="{Binding AddURL, Mode=TwoWay}"
                            IsSpellCheckEnabled="False" IsTextPredictionEnabled="True" Style="{StaticResource AddByURLStyle}"
                            BorderBrush="Transparent"
                            Foreground="White"
                            Height="18"
                            Background="Transparent" />
                    <Button Content="Add"
                    Width="50"
                    Height="30"
                    Command="{Binding AddByURLCommand}"
                    Style="{StaticResource PopupButtonStyle}" />
                </StackPanel>
                <ListView x:Name="TorrentList"
                        ItemsSource="{Binding Torrents}"
                        Background="#2B2B2B"
                        Height="323"
                        Width="450"
                        Margin="0, 3, 0, 3"
                        SelectionMode="None"
                        ItemContainerStyle="{StaticResource PopupListItemStyle}"
                        ItemTemplate="{StaticResource PopupListItemTemplate}"
                        Grid.ColumnSpan="2">
                    <ListViewItem />
                </ListView>
                <CheckBox Content="Use Default Location"
                          IsChecked="{Binding UseDefaultLocation, Mode=TwoWay}"
                          Visibility="{Binding IsAdd, Converter={StaticResource BooleanToVisibility}}"
                          Width="225"
                          HorizontalAlignment="Left"
                          Margin="-2, 0"
                          Style="{StaticResource PopupCheckboxStyle}" />
                <CheckBox Content="Move Files"
                          IsChecked="{Binding MoveFiles,Mode=TwoWay}"
                          Visibility="{Binding IsMove, Converter={StaticResource BooleanToVisibility}}"
                          Width="225"
                          HorizontalAlignment="Left"
                          Margin="-2, 0"
                          Style="{StaticResource PopupCheckboxStyle}" />
                <CheckBox Content="Keep Files"
                          IsChecked="{Binding KeepFiles, Mode=TwoWay}"
                          Visibility="{Binding IsDelete, Converter={StaticResource BooleanToVisibility}}"
                          Width="225"
                          HorizontalAlignment="Left"
                          Margin="-2, 0"
                          Style="{StaticResource PopupCheckboxStyle}" />
                <StackPanel Margin="1, 3"
                            Visibility="{Binding UseDefaultLocation, Converter={StaticResource InvertBooleanToVisibility}}"
                            Width="450">
                    <Grid Width="450"
                          Background="#2B2B2B">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="418" />
                            <ColumnDefinition Width="32" />
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="Location"
                                 Grid.Column="0"
                                 Text="{Binding Location, Mode=TwoWay}"
                                 Width="418"
                                 Height="18"
                                 Background="Transparent"
                                 BorderBrush="Transparent"
                                 Foreground="White"
                                 IsSpellCheckEnabled="False"
                                 IsTextPredictionEnabled="True"
                                 Style="{StaticResource AddByURLStyle}" />
                        <Button Width="32"
                                Height="32"
                                Margin="0"
                                Grid.Column="1"
                                Command="{Binding ToggleFavouriteLocationsCommand}"
                                Style="{StaticResource PopupButtonStyle}">
                            <TextBlock Grid.Column="1" FontSize="22" AutomationProperties.AccessibilityView="Raw" Foreground="White" FontStyle="Normal" FontFamily="{ThemeResource SymbolThemeFontFamily}" Text="&#xE011;" RenderTransformOrigin="0.5,0.5">
                                <TextBlock.RenderTransform>
                                    <CompositeTransform TranslateX="0" TranslateY="-4"/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Button>
                    </Grid>
                    <Popup x:Name="FavouriteLocationPopup" Width="450" IsOpen="{Binding ShowFavouriteLocations}" Opened="FavouriteLocationList_Opened" >
                        <ListView x:Name="FavouriteLocationList"
                                  ItemsSource="{Binding FavouriteLocations}"
                                  Width="450"
                                  Foreground="White"
                                  Background="#323232"
                                  SelectionMode="Single"
                                  SelectionChanged="ListView_SelectionChanged"
                                  ItemContainerStyle="{StaticResource PopupFavouritesListItemStyle}"
                                  ItemTemplate="{StaticResource PopupFavouritesListItemTemplate}"/>
                    </Popup>
                </StackPanel>
                <!--<StackPanel Grid.Row="4"
                        Grid.ColumnSpan="2"
                        Margin="1, 3"
                        Width="450"
                        HorizontalAlignment="Left"
                        Visibility="{Binding ShowCustomLocation, Converter={StaticResource BooleanToVisibility}}" >
                    <TextBox Width="450" Background="#2B2B2B" Foreground="White" x:Name="Location" BorderThickness="0" Text="{Binding Location, Mode=TwoWay}"
                             common:UpdateSourceHelper.IsEnabled="True"
                             common:UpdateSourceHelper.UpdateSourceText="{Binding Location, Mode=TwoWay}" />
                    -->
                <!--<Popup Margin="0,5,0,0" x:Name="Popup"
                           IsOpen="{Binding IsInResultsMode}" Width="450" Height="200" IsLightDismissEnabled="False">-->
                <!--
                    <ListBox ItemsSource="{Binding SearchResults}" Width="450" Height="200">
                        <ListBox.ItemContainerTransitions>
                            <TransitionCollection>
                                <EntranceThemeTransition />
                            </TransitionCollection>
                        </ListBox.ItemContainerTransitions>
                    </ListBox>
                    -->
                <!--</Popup>-->
                <!--
                </StackPanel>-->
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Button Content="Cancel"
                    Width="235"
                    Height="70"
                    Click="Window_Closed"
                    Style="{StaticResource PopupButtonStyle}"
                    Command="{Binding CancelCommand}"/>
                <Button Content="{Binding Purpose}"
                    Width="235"
                    Height="70"
                    Click="Window_Closed"
                    IsEnabled="{Binding TorrentsQueued}"
                    Style="{StaticResource PopupButtonStyle}"
                    Command="{Binding SubmitCommand}"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</callisto:CustomDialog>
